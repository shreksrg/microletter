public class StudentAction { 
public  StudentService studentService; 

private String stuName; 

        public String getStuName() { 
return stuName; 
} 

public void setStuName(String stuName) { 
this.stuName = stuName; 
} 


        public StudentService getStudentService() { 
return studentService; 
} 

public void setStudentService(StudentService studentService) { 
this.studentService = studentService; 
} 

        public void query() { 

HttpServletRequest request = ServletActionContext.getRequest(); 
HttpServletResponse response = ServletActionContext.getResponse(); 

String tempName = unescape(request.getParameter("stuName")); 

                
               try { 
                          

students=studentService.queryStuByName(tempName,currentPageIndex,pageSize); 
response.setContentType("text/html;charset=UTF-8"); 
response.getWriter().print(getStudentListJSON(students)); 


} catch (Exception e) { 
e.printStackTrace(); 
} 

        } 

     public String getStudentListJSON(List<Student> students) 
{ 
StringBuffer retVal=new StringBuffer("{'students':["); 
int i=0; 
for(Student t:students){ 
if(i!=0) 
{ 
retVal.append(","); 
} 
retVal.append("{"); 
retVal.append("\"stuId\":\""+t.getStuId()+"\""); 
retVal.append(",\"stuName\":\""+t.getStuName()+"\""); 
retVal.append(",\"stuSex\":\""+t.getStuSex()+"\""); 
retVal.append(",\"stuBir\":\""+t.getStuBir()+"\""); 
retVal.append(",\"stuAdd\":\""+t.getStuAdd()+"\""); 
retVal.append("}"); 
i=i+1; 
} 
retVal.append("],\"totalPage\":\""+10+ "\"}"); 
return retVal.toString(); 
} 

       
        @SuppressWarnings("unused") 
private String unescape(String src) { 
  StringBuffer tmp = new StringBuffer(); 
  tmp.ensureCapacity(src.length()); 
  int lastPos = 0, pos = 0; 
  char ch; 
  while (lastPos < src.length()) { 
   pos = src.indexOf("%", lastPos); 
   if (pos == lastPos) { 
    if (src.charAt(pos + 1) == 'u') { 
     ch = (char) Integer.parseInt(src 
       .substring(pos + 2, pos + 6), 16); 
     tmp.append(ch); 
     lastPos = pos + 6; 
    } else { 
     ch = (char) Integer.parseInt(src 
       .substring(pos + 1, pos + 3), 16); 
     tmp.append(ch); 
     lastPos = pos + 3; 
    } 
   } else { 
    if (pos == -1) { 
     tmp.append(src.substring(lastPos)); 
     lastPos = src.length(); 
    } else { 
     tmp.append(src.substring(lastPos, pos)); 
     lastPos = pos; 
    } 
   } 
  } 

  return tmp.toString(); 

} 

}